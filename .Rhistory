bond_export_df$Values <- bond_export_df$value/1000000000
bond_export_df <- subset(bond_export_df, select = c("date", "indicator", "country", "Values"))
View(bond_export_df)
library(ggplot2)
View(ppg_bond_dis)
#Subset ppg bond disbursement into dataframe, format units to thousands, subset
ppg_bond_dis <- subset(df, indicatorID == "DT.DIS.PBND.CD")
#Change units to billions USD
ppg_bond_dis$disbursement <- ppg_bond_dis$value/1000000000
ppg_bond_dis <- subset(ppg_bond_dis, select = c("date", "indicator", "country", "disbursement"))
View(ppg_bond_dis)
library(ggplot2)
p = ggplot() +
geom_line(data = ppg_bond_dis, aes(x = date, y = disbursement), color = "blue") +
geom_line(data = bond_export_df, aes(x = date, y = Values), color = "red") +
xlab('Dates') +
ylab('Billions USD')
print(p)
library(ggplot2)
p = ggplot() +
geom_line(data = ppg_bond_dis, aes(x = date, y = Difference), color = "blue") +
geom_line(data = bond_export_df, aes(x = date, y = Difference), color = "red") +
xlab('Dates') +
ylab('Billions USD')
print(p)
library(ggplot2)
p = ggplot() +
geom_line(data = ppg_bond_dis, aes(x = date, y = ppg_bond_dis$disbursement), color = "blue") +
geom_line(data = bond_export_df, aes(x = date, y = bond_export_df$Values), color = "red") +
xlab('Dates') +
ylab('Billions USD')
print(p)
View(bond_export_df)
library(ggplot2)
ggplot(NULL, aes(x=date)) +
geom_line(aes(data = ppg_bond_dis, y = disbursement), color = "darkred") +
geom_line(aes(data = bond_export_df, y = Values), color="steelblue", linetype="twodash")
library(ggplot2)
ggplot(NULL, aes(x=date)) +
geom_line(aes(data = ppg_bond_dis, y = "disbursement"), color = "darkred") +
geom_line(aes(data = bond_export_df, y = "Values"), color="steelblue", linetype="twodash")
library(ggplot2)
ggplot() +
geom_line(data=ppg_bond_dis, aes(x=date, y=disbursement), color='green') +
geom_line(data=bond_export_df, aes(x=date, y=Values), color='red')
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot() +
geom_line(data = bond_export_df, aes(x=date, y=Values))
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date), grop=1) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date), group=1) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date, group=1)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date, group=2)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date, group=3)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(date, Values, group=1)) +
geom_line()
library(ggplot2)
ggplot(bond_export_df, aes(date, Values, group=2)) +
geom_line()
library(ggplot2)
ggplot(bond_export_df, aes(date, Values, group=2)) +
geom_point() +
geom_line()
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_line(aes(y = indicator), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_line(aes(y = Values), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_line(aes(y = Values), color = "darkred") +
geom_point()
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_point() +
geom_line(aes(y = Values), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_point(y=indicator) +
geom_line(aes(y = Values), color = "darkred")
library(ggplot2)
ggplot(bond_export_df, aes(x=date)) +
geom_point(y=Values) +
geom_line(aes(y = Values), color = "darkred")
library(ggplot2)
ggplot(data = bond_export_df, mapping = aes(x=date, y=Values, color=indicator)) +
geom_line()
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HDN", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = ppg_bond_dis, startdate = 2014, enddate = 2018, POSIXct = TRUE)
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HDN", "MEX", "PRY")
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HDN", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = "DT.DIS.PBND.CD", startdate = 2014, enddate = 2018, POSIXct = TRUE)
df <- data.frame(bond_data_LAC_list)
View(df_LAC_list)
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HND", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = "DT.DIS.PBND.CD", startdate = 2014, enddate = 2018, POSIXct = TRUE)
df <- data.frame(bond_data_LAC_list)
View(df_LAC_list)
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HND", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = "DT.DIS.PBND.CD", startdate = 2014, enddate = 2018, POSIXct = TRUE)
df_LAC_list <- data.frame(bond_data_LAC_list)
View(df_LAC_list)
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HND", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = "DT.DIS.PBND.CD", startdate = 2014, enddate = 2018, POSIXct = TRUE)
df_LAC_list <- data.frame(bond_data_LAC_list)
df_LAC_list$Values <- df_LAC_list$value/1000000000
df_LAC_list <- subset(df_LAC_list, select = c("date", "indicator", "country", "Values"))
View(df_LAC_list)
LAC_list <- c("ARG", "BRA", "COL", "CRI", "DOM", "ECU", "GTM", "HND", "MEX", "PRY")
#Fetch data from WB API, specifying country, indicator, start/end dates and put into dataframe
bond_data_LAC_list <- wb(country = LAC_list, indicator = "DT.DIS.PBND.CD", startdate = 2014, enddate = 2018, POSIXct = TRUE)
df_LAC_list <- data.frame(bond_data_LAC_list)
df_LAC_list$Values <- df_LAC_list$value/1000000000
df_LAC_list <- subset(df_LAC_list, select = c("date", "indicator", "country", "Values"))
View(df_LAC_list)
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=indicator, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=indicator)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=1, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=2, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=3, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=q0, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=10, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=0, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_line() +
geom_point()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, color=country)) +
geom_point() +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=1)) +
geom_point() +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=1, color=country)) +
geom_point() +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=indicator, color=country)) +
geom_point() +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=Values, color=country)) +
geom_point() +
geom_line()
ggplot(data = df_LAC_list, mapping = aes(x=date, y=Values, group=country, color=country)) +
geom_point() +
geom_line()
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#Add working directory, assign data to lab variable
load("C:\Users\WB537822")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#Add working directory, assign data to lab variable
load("\C:\Users\WB537822")
load("C:/Users/WB537822/Ch6_Exercise2_FederalReserve.RData")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#Add working directory, assign data to lab variable
View(dta)
load("Ch6_Exercise2_FederalReserve.RData")
setwd("C:/Users/WB537822/Desktop/stats1")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
load("Ch6_Exercise2_FederalReserve.RData")
#Add working directory, assign data to lab variable
View(dta)
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
load("Ch6_Exercise2_FederalReserve.RData")
#Add working directory, assign data to lab variable
View(dta)
require(knitr)
require(haven)
opts_chunk$set(echo = TRUE)
options(digits = 3)
load("Ch6_Exercise2_FederalReserve.RData")
#Add working directory, assign data to lab variable
View(dta)
#Subset dataset and specify democrat column to equal 1
dem_plot <- subset(dta, dta$democrat==1)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Democrats",
xlab="Quarters Since Previous Quarters", ylab = "FFR (%)", pch = 19, col='blue')
require(knitr)
require(haven)
opts_chunk$set(echo = TRUE)
options(digits = 3)
load("Ch6_Exercise2_FederalReserve.RData")
#Add working directory, assign data to lab variable
View(dta)
#Subset dataset and specify democrat column to equal 1
dem_plot <- subset(dta, dta$democrat==1)
#Subset dataset and specify Democrat column to equal 1
dem_plot <- subset(dta, dta$Democrat==1)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Democrats",
xlab="Quarters Since Previous Quarters", ylab = "FFR (%)", pch = 19, col='blue')
#Subset dataset and specify Democrat column to equal 1
dem_plot <- subset(dta, dta$Democrat==1)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Democrats",
xlab="Quarters Since Previous Quarters", ylab = "Federal Funds Rate (%)", pch = 19, col='blue')
#Subset dataset and specify Democrat column to equal 1
dem_plot <- subset(dta, dta$Democrat==1)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Democrats",
xlab="Quarters Since Previous Election", ylab = "Federal Funds Rate (%)", pch = 19, col='blue')
#Subset dataset and specify Democrat column to equal 0
rep_plot <- subset(dta, dta$Democrat==0)
plot(rep_plot$Quarters, rep_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Republicans",
xlab="Quarters Since Previous Election", ylab = "FFR (%)", pch = 19, col = "red")
#Create interaction variable by multiplying Democrat dummy variable with Quarters
dta$duminteract <- dta$Democrat * dta$Quarters
olsinteraction <- lm(dta$FEDFUNDS ~ dta$Democrat + dta$Quarters + dta$duminteract)
summary(olsinteraction)
olsrepublican <- lm(rep_plot$FEDFUNDS ~ rep_plot$Quarters)
summary(olsrepublican)
olsDemocrat <- lm(dem_plot$FEDFUNDS ~ dem_plot$Quarters)
summary(olsDemocrat)
#Subset dataset and specify Democrat column to equal 0
rep_plot <- subset(dta, dta$Democrat==0)
plot(rep_plot$Quarters, rep_plot$FEDFUNDS, main="Quarters and Federal Funds Rate: Republicans",
xlab="Quarters Since Previous Election", ylab = "Federal Funds Rate (%)", pch = 19, col = "red")
#View(dta)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate",
xlab="Quarters Since Previous Election", ylab = "Federal Funds Rate (%)", pch=19, col='blue')
points(rep_plot$Quarters, rep_plot$FEDFUNDS, pch=18, col='red')
abline(lm(dem_plot$FEDFUNDS ~ dem_plot$Quarters), col = 'blue')
abline(lm(rep_plot$FEDFUNDS ~ rep_plot$Quarters), col = 'red')
legend("topleft", legend = c("Democrat", "Republican"), pch=c(19, 18), col=c("blue", "red"))
#Create interaction variable by multiplying Democrat dummy variable with Quarters
dta$duminteract <- dta$Democrat * dta$Quarters
#Run model with FFR as dependent variable and Democrat, Quarters, and duminteract as independent variables
olsinteraction <- lm(dta$FEDFUNDS ~ dta$Democrat + dta$Quarters + dta$duminteract)
summary(olsinteraction)
olsrepublican <- lm(rep_plot$FEDFUNDS ~ rep_plot$Quarters)
summary(olsrepublican)
olsDemocrat <- lm(dem_plot$FEDFUNDS ~ dem_plot$Quarters)
summary(olsDemocrat)
#View(dta)
plot(dem_plot$Quarters, dem_plot$FEDFUNDS, main="Quarters and Federal Funds Rate",
xlab="Quarters Since Previous Election", ylab = "Federal Funds Rate (%)", pch=19, col='blue')
points(rep_plot$Quarters, rep_plot$FEDFUNDS, pch=18, col='red')
abline(lm(dem_plot$FEDFUNDS ~ dem_plot$Quarters), col = 'blue')
abline(lm(rep_plot$FEDFUNDS ~ rep_plot$Quarters), col = 'red')
legend("topleft", legend = c("Democrat", "Republican"), pch=c(19, 18), col=c("blue", "red"))
olsinteraction_lag <- lm(dta$FEDFUNDS ~ dta$Democrat + dta$Quarters + dta$duminteract + dta$lag_FEDFUNDS + dta$inflation)
summary(olsinteraction_lag)
require(knitr)
require(haven)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#Add working directory, assign data to lab variable
load("Ch6_Exercise4_Speeding_tickets.RData")
View(dta)
diff_means_ols <- lm(dta$Amount ~ dta$Female)
summary(diff_means_ols)
diff_means_ols2 <- lm(dta$Amount ~ dta$Female + dta$Age + dta$MPHover)
summary(diff_means_ols2)
diff_means_ols3 <- lm(dta$Amount ~ dta$Black + dta$Hispanic)
summary(diff_means_ols3)
diff_means_ols3 <- lm(dta$Amount ~ dta$Female +  dta$Black + dta$Hispanic)
summary(diff_means_ols3)
diff_means_ols4 <- lm(dta$Amount ~ dta$Female + dta$Age + dta$MPHover + dta$Black + dta$Hispanic)
summary(diff_means_ols4)
dta$interact_black <- dta$Black * dta$MPHover
dta$interact_hispanic <- dta$Hispanic * dta$MPHover
dta$interact_black <- dta$Black * dta$MPHover
dta$interact_hispanic <- dta$Hispanic * dta$MPHover
diff_means_ols4 <- lm(dta$Amount ~ dta$Female + dta$MPHover + dta$interact_black + dta$interact_hispanic)
summary(diff_means_ols4)
dta$interact_black <- dta$Black * dta$MPHover
dta$interact_hispanic <- dta$Hispanic * dta$MPHover
diff_means_ols4 <- lm(dta$Amount ~ dta$MPHover + dta$interact_black + dta$interact_hispanic)
summary(diff_means_ols4)
dta$interact_black <- dta$Black * dta$MPHover
dta$interact_hispanic <- dta$Hispanic * dta$MPHover
diff_means_ols4 <- lm(dta$Amount ~ dta$Female + dta$MPHover + dta$interact_black + dta$interact_hispanic)
summary(diff_means_ols4)
setwd("C:/Users/WB537822/Downloads")
install.packages("readxl")
library("readxl")
install.packages("readxl")
library("readxl")
dta <- read_excel("Battleground-65-Final-Dataset.xlsx")
install.packages("readxl")
dta <- read_excel("Battleground-65-Final-Dataset.xlsx")
install.packages("readxl")
library("readxl")
dta <- read_excel("Battleground-65-Final-Dataset.xlsx")
library(readxl)
Battleground_65_Final_Dataset <- read_excel("Battleground-65-Final-Dataset.xlsx")
View(Battleground_65_Final_Dataset)
View(Battleground_65_Final_Dataset)
dta <- "Battleground-65-Final-Dataset.xlsx"
dta <- load("Battleground-65-Final-Dataset.xlsx")
dta <- Battleground_65_Final_Dataset
head(dta)
View(dta)
View(dta$PARTYID)
class(dta)
View(dta)
table(dta$PARTYID)
prop.table(dta$PARTYID)
margin.table(dta$PARTYID)
install.packages("gmodels")
CrossTable(dta$PARTYID)
library(gmodels)
CrossTable(dta$PARTYID)
table(dta$PARTYID)
mytable <- table(dta$PARTYID)
prop.table(mytable)
mytable <- table(dta$PARTYID)
prop.table(mytable)
mytable <- table(dta$PARTYID)
prop.table(mytable, 1)
mytable <- table(dta$PARTYID)
prop.table(mytable, 2)
dta$partyid_dummy <- ifelse(dta$PARTYID>=5,1,0)
View(dta)
library(gmodels)
CrossTable(dta$PARTYID)
dta$partyid_dummy <- ifelse(dta$PARTYID>5,1,0)
View(dta)
setwd("C:/Users/WB537822/Desktop/stats1")
require(knitr)
require(haven)
require(car)
require(AER)
require(lm.beta)  ## install.packages("lm.beta")
opts_chunk$set(echo = TRUE)
options(digits = 6)
setwd("C:/Users/WB537822/Desktop/stats1")
load("Chapter7_lab.RData")
dtawomen <- dta[dta$male == 0,]
dtamen <- dta[dta$male == 1,]
results_female <- lm(scale(dtawomen$wage96) ~ scale(dtawomen$height81) + scale(dtawomen$height85) + scale(dtawomen$siblings) + scale(dtawomen$esteem80))
summary(results_female)
require(knitr)
require(haven)
require(car)
require(AER)
require(lm.beta)
opts_chunk$set(echo = TRUE)
options(digits = 6)
setwd("C:/Users/WB537822/Desktop/stats1")
load("Chapter7_lab.RData")
#Create two subsetted datasets for women and men, respectively
dtawomen <- dta[dta$male == 0,]
dtamen <- dta[dta$male == 1,]
results_female <- lm(scale(dtawomen$wage96) ~ scale(dtawomen$height81) + scale(dtawomen$height85)
+ scale(dtawomen$siblings) + scale(dtawomen$esteem80))
summary(results_female)
#Create two subsetted datasets for women and men, respectively
dtawomen <- dta[dta$male == 0,]
dtamen <- dta[dta$male == 1,]
results_female_standardized <- lm(scale(dtawomen$wage96) ~ scale(dtawomen$height81) + scale(dtawomen$height85)
+ scale(dtawomen$siblings) + scale(dtawomen$esteem80))
summary(results_female_standardized)
results_female_unstandardized <- lm(dtawomen$wage96 ~ dtawomen$height81 + dtawomen$height85
+ dtawomen$siblings + dtawomen$esteem80)
summary(results_female_unstandardized)
# Estimate regression models using scale command for continuous variables
results2_female <- lm(scale(dtawomen$wage96) ~ scale(dtawomen$height85) + scale(dtawomen$height81) + scale(dtawomen$esteem80)
+ scale(dtawomen$siblings) + dtawomen$black + dtawomen$hispanic + scale(dtawomen$daded79)
+ scale(dtawomen$momed79))
summary(results2_female
# Estimate regression models using scale command for continuous variables
results2_female <- lm(scale(dtawomen$wage96) ~ scale(dtawomen$height85) + scale(dtawomen$height81) + scale(dtawomen$esteem80)
+ scale(dtawomen$siblings) + dtawomen$black + dtawomen$hispanic + scale(dtawomen$daded79)
+ scale(dtawomen$momed79))
summary(results2_female)
#Convert 0 values to NA
dta$wage96.nona <- dta$wage96
dta$wage96.nona[dta$wage96] <- NA
#Convert 0 values to NA
dtawomen$wage96.nona <- dta$wage96
#Convert 0 values to NA
dtawomen$wage96.nona <- dtawomen$wage96
dtawomen$wage96.nona[dta$wage96] <- NA
results3_female <- lm(log(wage96.NoNA) ~ height85 + height81 + esteem80 + black + siblings, data = dtawomen)
#Convert 0 values to NA
dtawomen$wage96.nona <- dtawomen$wage96
dtawomen$wage96.nona[dta$wage96] <- NA
results3_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings, data = dtawomen)
#Convert 0 values to NA
dtawomen$wage96.nona <- dtawomen$wage96
dtawomen$wage96.nona[dtawomen$wage96] <- NA
results3_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings, data = dtawomen)
#Convert 0 values to NA
dta$wage96.nona <- dta$wage96
dta$wage96.nona[dta$wage96] <- NA
results3_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings, dta[dta$male == 0,])
#Convert 0 values to NA
dta$wage96.nona <- dta$wage96
dta$wage96.nona[dta$wage96==0] <- NA
results3_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings, dta[dta$male == 0,])
#Convert 0 values to NA
dta$wage96.nona <- dta$wage96
dta$wage96.nona[dta$wage96==0] <- NA
results3_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings, dta[dta$male == 0,])
summary(results3_female)
dta$siblings_squared <- dta$siblings^2
results4_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings +
siblings_squared, data=dta[dta$male==0,])
summary(results4_female)
dta$siblings_squared <- dta$siblings^5
results4_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings +
siblings_squared, data=dta[dta$male==0,])
summary(results4_female)
dta$siblings_squared <- dta$siblings^2
results4_female <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings +
siblings_squared, data=dta[dta$male==0,])
summary(results4_female)
dta$siblings_squared <- dta$siblings^2
results4_male <- lm(log(wage96.nona) ~ height85 + height81 + esteem80 + black + siblings +
siblings_squared, data=dta[dta$male==1,])
#Calculate F-statistic using car package
library(car)
#Calculate F-statistic using car package
package(car)
#Calculate F-statistic using car package
linearHypothesis(results_female5, c("momed79 == daded79"))
#Calculate F-statistic using car package
require(car)
#Calculate F-statistic using car package
library(car)
#Calculate F-statistic using car package
library("car")
#Calculate F-statistic using car package
install.packages("car")
#Calculate F-statistic using car package
library(car)
linearHypothesis(results_female5, c("momed79 == daded79"))
#Unrestricted model
results_female5 <- lm(log(wage96.nona) ~ momed79 + daded79 + height85 + height81 + black
+ hispanic, data=dta[dta$male==0,])
#Calculate F-statistic using car package
library(car)
linearHypothesis(results_female5, c("momed79 == daded79"))
#Unrestricted model
results_female5 <- lm(log(wage96.nona) ~ momed79 + daded79 + height85 + height81 + black
+ hispanic, data=dta[dta$male==0,])
#Calculate F-statistic using car package
library(car)
linearHypothesis(results_female5, c("momed79 = daded79"))
results_female5_restrict1 <- lm(log(wage96.NoNA) ~ MomDadEd + height85 + height81 + black
+ hispanic, data = dta[dta$male == 0,])
results_female5_restrict1 <- lm(log(wage96.nona) ~ MomDadEd + height85 + height81 + black
+ hispanic, data = dta[dta$male == 0,])
dta$MomDadEd = dta$momed79 + dta$daded79
results_female5_restrict1 <- lm(log(wage96.nona) ~ MomDadEd + height85 + height81 + black
+ hispanic, data = dta[dta$male == 0,])
#calculate F stat
F.stat.top = ((summary(results_female5)$r.squared - summary(results_female5_restrict1)$r.squared)/1)
F.stat.bottom = ((1-summary(results_female5)$r.squared)/(summary(results_female5)$df[2]))
F.stat = F.stat.top/F.stat.bottom
dta$MomDadEd = dta$momed79 + dta$daded79
results_female5_restrict1 <- lm(log(wage96.nona) ~ MomDadEd + height85 + height81 + black
+ hispanic, data = dta[dta$male == 0,])
#calculate F stat
F.stat.top = ((summary(results_female5)$r.squared - summary(results_female5_restrict1)$r.squared)/1)
F.stat.bottom = ((1-summary(results_female5)$r.squared)/(summary(results_female5)$df[2]))
F.stat = F.stat.top/F.stat.bottom
qf(1-0.05, df1=1, df2= summary(results_female5)$df[2])
